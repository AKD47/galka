{"version":3,"sources":["<no source>","libs/_fonts.scss","base/_base.scss","base/_grid.scss","header/_navigation.scss","compass-sass-mixins/compass/css3/_shared.sass","breakpoint/_breakpoint.scss","libs/_mixins.scss","header/_head.scss","content/_hor-banner.scss"],"names":[],"mappings":"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","file":"styles.min.css","sourcesContent":[null,"@import url('https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i');\r\n//@import url('https://fonts.googleapis.com/css?family=PT+Sans:400,400i,700,700i');\r\n//@import url('https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i');\r\n//@import url('https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,200i,300,300i,400,400i,600,600i,700,700i,900,900i');\r\n//@import url('https://fonts.googleapis.com/css?family=Lato:100,100i,300,300i,400,400i,700,700i,900,900i');\r\n$RobotoThin: 'Roboto Thin';\r\n$RobotoLight: 'Roboto Light';\r\n$RobotoRegular: 'Roboto Regular';\r\n$RobotoMedium: 'Roboto Medium';\r\n$RobotoBold: 'Roboto Bold';\r\n$Boomboom: 'Boomboom';\r\n@font-face {\r\n  font-family: 'Roboto Thin';\r\n  src: url('../fonts/Roboto/RobotoThin.eot') format('embedded-opentype'),\r\n  url('../fonts/Roboto/RobotoThin.woff2') format('woff2'),\r\n  url('../fonts/Roboto/RobotoThin.woff') format('woff'),\r\n  url('../fonts/Roboto/RobotoThin.ttf') format('truetype'),\r\n  url('../fonts/Roboto/RobotoThin.svg') format('svg');\r\n  font-weight: normal;\r\n}\r\n@font-face {\r\n  font-family: 'Roboto Light';\r\n  src: url('../fonts/Roboto/RobotoLight.eot') format('embedded-opentype'),\r\n  url('../fonts/Roboto/RobotoLight.woff2') format('woff2'),\r\n  url('../fonts/Roboto/RobotoLight.woff') format('woff'),\r\n  url('../fonts/Roboto/RobotoLight.ttf') format('truetype'),\r\n  url('../fonts/Roboto/RobotoLight.svg') format('svg');\r\n  font-weight: normal;\r\n}\r\n@font-face {\r\n  font-family: 'Roboto Regular';\r\n  src: url('../fonts/Roboto/RobotoRegular.eot') format('embedded-opentype'),\r\n  url('../fonts/Roboto/RobotoRegular.woff2') format('woff2'),\r\n  url('../fonts/Roboto/RobotoRegular.woff') format('woff'),\r\n  url('../fonts/Roboto/RobotoRegular.ttf') format('truetype'),\r\n  url('../fonts/Roboto/RobotoRegular.svg') format('svg');\r\n  font-weight: normal;\r\n}\r\n@font-face {\r\n  font-family: 'Roboto Medium';\r\n  src: url('../fonts/Roboto/RobotoMedium.eot') format('embedded-opentype'),\r\n  url('../fonts/Roboto/RobotoMedium.woff2') format('woff2'),\r\n  url('../fonts/Roboto/RobotoMedium.woff') format('woff'),\r\n  url('../fonts/Roboto/RobotoMedium.ttf') format('truetype'),\r\n  url('../fonts/Roboto/RobotoMedium.svg') format('svg');\r\n  font-weight: normal;\r\n}\r\n@font-face {\r\n  font-family: 'Roboto Bold';\r\n  src: url('../fonts/Roboto/RobotoBold.eot') format('embedded-opentype'),\r\n  url('../fonts/Roboto/RobotoBold.woff2') format('woff2'),\r\n  url('../fonts/Roboto/RobotoBold.woff') format('woff'),\r\n  url('../fonts/Roboto/RobotoBold.ttf') format('truetype'),\r\n  url('../fonts/Roboto/RobotoBold.svg') format('svg');\r\n  font-weight: normal;\r\n}\r\n@font-face {\r\n  font-family: 'Boomboom';\r\n  src: url('../fonts/Boomboom/boomboom.eot') format('embedded-opentype'),\r\n  url('../fonts/Boomboom/boomboom.woff2') format('woff2'),\r\n  url('../fonts/Boomboom/boomboom.woff') format('woff'),\r\n  url('../fonts/Boomboom/boomboom.ttf') format('truetype'),\r\n  url('../fonts/Boomboom/boomboom.svg') format('svg');\r\n}","html{\r\n    width: 100%;\r\n}\r\nbody{\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-weight: inherit;\r\n    font-style: inherit;\r\n    /*font-family: inherit;*/\r\n    text-align: left;\r\n    vertical-align: baseline;\r\n    font-family: 'Open Sans', sans-serif;\r\n    //font-family: 'PT Sans', sans-serif;\r\n    //font-family: 'Roboto', sans-serif;\r\n    //font-family: 'Source Sans Pro', sans-serif;\r\n    //font-family: 'Lato', sans-serif;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n    &:hover, &:focus, &:active{\r\n        text-decoration: none;\r\n    }\r\n}\r\n\r\ninput{\r\n    outline: none;\r\n    &:hover, &:focus, &:active{\r\n        outline: none;\r\n    }\r\n}\r\n\r\ntextarea{\r\n    outline: none;\r\n    &:hover, &:focus, &:active{\r\n        outline: none;\r\n    }\r\n}\r\n\r\n%clearfix {\r\n    *zoom: 1;\r\n    &:after {\r\n        content: '';\r\n        display: table;\r\n        line-height: 0;\r\n        clear: both;\r\n    }\r\n}\r\n",".container {\r\n    box-sizing: border-box;\r\n    padding-right: 0;\r\n    padding-left: 0;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    position: relative;\r\n}\r\n\r\n.container {\r\n    @extend %clearfix;\r\n}\r\n@media (min-width: 768px) {\r\n    .container {\r\n        width: 766px;\r\n        padding-right: 10px;\r\n        padding-left: 10px;\r\n    }\r\n}\r\n@media (min-width: 992px) {\r\n    .container {\r\n        width: 990px;\r\n        padding-right: 10px;\r\n        padding-left: 10px;\r\n    }\r\n}\r\n\r\n@media (min-width: 1200px) {\r\n    .container {\r\n        width: 1170px;\r\n    }\r\n}\r\n",".header__navigation{\r\n  display: block;\r\n  position: relative;\r\n  float: left;\r\n  width: 100%;\r\n}\r\n.header__logo{\r\n  display: block;\r\n  position: relative;\r\n  float: left;\r\n  width: 155px;\r\n  height: 63px;\r\n  margin-top: 8px;\r\n  margin-bottom: 9px;\r\n  margin-right: 80px;\r\n  color: #2579bf;\r\n  font-family: $Boomboom;\r\n  font-size: 39px;\r\n  text-transform: capitalize;\r\n  text-align: center;\r\n  line-height: 61px;\r\n  > span{\r\n    text-transform: uppercase;\r\n    color: #ee2e24;\r\n  }\r\n}\r\n.header__trigger {\r\n  display: none;\r\n  position: relative;\r\n  float: right;\r\n  width: 50px;\r\n  height: 50px;\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n  padding: 5px;\r\n  @include box-sizing(bored-box);\r\n  @include breakpoint(max-width 670px) {\r\n    display: block;\r\n  }\r\n  span {\r\n    display: block;\r\n    position: relative;\r\n    float: left;\r\n    width: 100%;\r\n    height: 4px;\r\n    background-color: #ee2e24;\r\n    margin: 5px 0;\r\n    @include transition(0.4s);\r\n  }\r\n}\r\n.header__trigger.show {\r\n  span:nth-of-type(1) {\r\n    @include transition(0.4s);\r\n    transform: rotate(-45deg);\r\n    margin-top: 18px;\r\n  }\r\n  span:nth-of-type(2) {\r\n    display: none;\r\n  }\r\n  span:nth-of-type(3) {\r\n    @include transition(0.4s);\r\n    transform: rotate(45deg);\r\n    margin-top: -7px;\r\n  }\r\n}\r\n.header__nav{\r\n  @include display-flex(flex);\r\n  @include flex-wrap(wrap);\r\n  @include flex-direction(row);\r\n  @include justify-content(space-between);\r\n  position: relative;\r\n  float: left;\r\n  width: calc(100% - (155px + 80px));\r\n  margin: 0;\r\n  margin-top: 18px;\r\n  padding: 0;\r\n  list-style: none;\r\n  @include breakpoint(max-width 1024px) {\r\n    @include align-items(center);\r\n  }\r\n  @include breakpoint(max-width 670px) {\r\n    display: none;\r\n    @include flex-direction(column);\r\n    width: 100%;\r\n\r\n  }\r\n  > li {\r\n    display: block;\r\n    > a {\r\n      display: block;\r\n      position: relative;\r\n      float: left;\r\n      width: 100%;\r\n      text-align: center;\r\n      border-bottom: 2px solid transparent;\r\n      padding-top: 10px;\r\n      padding-bottom: 10px;\r\n      padding-left: 5px;\r\n      padding-right: 5px;\r\n      @include box-sizing(border-box);\r\n      color: #343434;\r\n      font-family: $RobotoMedium;\r\n      font-size: 16px;\r\n      &:hover {\r\n        color: #ee2e24;\r\n        border-bottom: 2px solid #ee2e24;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@import \"../support\";\n\n// This mixin provides basic support for CSS3 properties and\n// their corresponding experimental CSS2 properties when\n// the implementations are identical except for the property\n// prefix.\n@mixin experimental($property, $value, $moz: $experimental-support-for-mozilla, $webkit: $experimental-support-for-webkit, $o: $experimental-support-for-opera, $ms: $experimental-support-for-microsoft, $khtml: $experimental-support-for-khtml, $official: true) {\n  @if $webkit and $experimental-support-for-webkit {\n    -webkit-#{$property}: $value; }\n  @if $khtml and $experimental-support-for-khtml {\n    -khtml-#{$property}: $value; }\n  @if $moz and $experimental-support-for-mozilla {\n    -moz-#{$property}: $value; }\n  @if $ms and $experimental-support-for-microsoft {\n    -ms-#{$property}: $value; }\n  @if $o and $experimental-support-for-opera {\n    -o-#{$property}: $value; }\n  @if $official {\n    #{$property}: $value; } }\n\n// Same as experimental(), but for cases when the property is the same and the value is vendorized\n@mixin experimental-value($property, $value, $moz: $experimental-support-for-mozilla, $webkit: $experimental-support-for-webkit, $o: $experimental-support-for-opera, $ms: $experimental-support-for-microsoft, $khtml: $experimental-support-for-khtml, $official: true) {\n  @if $webkit and $experimental-support-for-webkit {\n    #{$property}: -webkit-#{$value}; }\n  @if $khtml and $experimental-support-for-khtml {\n    #{$property}: -khtml-#{$value}; }\n  @if $moz and $experimental-support-for-mozilla {\n    #{$property}: -moz-#{$value}; }\n  @if $ms and $experimental-support-for-microsoft {\n    #{$property}: -ms-#{$value}; }\n  @if $o and $experimental-support-for-opera {\n    #{$property}: -o-#{$value}; }\n  @if $official {\n    #{$property}: #{$value}; } }\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","@mixin transition($t) {\r\n\t-webkit-transition: all $t linear;\r\n\t   -moz-transition: all $t linear;\r\n\t    -ms-transition: all $t linear;\r\n\t     -o-transition: all $t linear;\r\n\t        transition: all $t linear;\r\n}\r\n\r\n@mixin overflow-img() {\r\n\toverflow: hidden;\r\n\timg {\r\n\t\tmin-width: 100%;\r\n\t\theight: auto;\r\n\t\tposition: relative;\r\n\t\tleft: 50%;\r\n\t\ttop: 50%;\r\n\t\t-webkit-transform: translate(-50%,-50%);\r\n\t\t   -moz-transform: translate(-50%,-50%);\r\n\t\t    -ms-transform: translate(-50%,-50%);\r\n\t\t     -o-transform: translate(-50%,-50%);\r\n\t\t        transform: translate(-50%,-50%);\r\n\t}\r\n}\r\n\r\n@mixin border-box{\r\n\tbox-sizing: border-box;\r\n\t-moz-box-sizing: border-box;\r\n\t-webkit-box-sizing: border-box;\r\n\t-ms-box-sizing: border-box;\r\n}\r\n\r\n@mixin vertical-align {\r\n\tposition: relative;\r\n\ttop: 50%;\r\n\t-webkit-transform: translateY(-50%);\r\n\t-ms-transform: translateY(-50%);\r\n\ttransform: translateY(-50%);\r\n}\r\n\r\n// Breakpoints for each query\r\n$smartphone: 480px;\r\n$tabletPortrait: 767px;\r\n$tabletLandscape: 1024px;\r\n$desktop: 1174px;\r\n$largeScreen: 1400px;\r\n\r\n@mixin respondTo($media) {\r\n\t@if $media == smartphone {\r\n\t  @media (min-width: $smartphone) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t@else if $media == tablet {\r\n\t  @media (min-width: $tabletPortrait) and (max-width: $tabletLandscape) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t@else if $media == smallScreen {\r\n\t  @media (min-width: $desktop) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t@else if $media == desktop {\r\n\t  @media (min-width: $desktop) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n  @else if $media == largeScreen {\r\n    @media (min-width: $largeScreen) {\r\n\t\t\t@content;\r\n\t\t}\r\n  }\r\n}\r\n",".header{\r\n  display: block;\r\n  position: relative;\r\n  float: left;\r\n  width: 100%;\r\n  &__contacts{\r\n    display: block;\r\n    position: relative;\r\n    float: left;\r\n    width: 100%;\r\n    border-bottom: 1px solid #cbcbcb;\r\n    &--links{\r\n      display: block;\r\n      position: relative;\r\n      float: right;\r\n      margin-right: 26px;\r\n      margin-top: 6px;\r\n      margin-bottom: 7px;\r\n      @include breakpoint(max-width 670px){\r\n        float: left;\r\n        width: 100%;\r\n        margin: 5px 0;\r\n        padding: 0 10px;\r\n        @include box-sizing(border-box);\r\n      }\r\n      > span{\r\n        display: block;\r\n        position: relative;\r\n        float: left;\r\n        margin-right: 2px;\r\n        color: #494949;\r\n        font-family: $RobotoBold;\r\n        font-size: 13px;\r\n        line-height: 22px;\r\n      }\r\n      > a{\r\n        display: block;\r\n        position: relative;\r\n        float: left;\r\n        margin-right: 2px;\r\n        color: #343434;\r\n        font-size: 12px;\r\n        font-weight: 400;\r\n        line-height: 22px;\r\n        text-decoration: underline;\r\n        @include breakpoint(max-width 670px){\r\n          width: 100%;\r\n        }\r\n        &:hover{\r\n          text-decoration: none;\r\n        }\r\n      }\r\n    }\r\n    &--send{\r\n      display: block;\r\n      position: relative;\r\n      float: right;\r\n      margin-top: 6px;\r\n      margin-bottom: 7px;\r\n      color: #494949;\r\n      font-family: $RobotoRegular;\r\n      font-size: 13px;\r\n      text-decoration: underline;\r\n      line-height: 22px;\r\n      @include breakpoint(max-width 670px){\r\n        float: left;\r\n        width: 100%;\r\n        margin: 5px 0;\r\n        padding: 0 10px;\r\n        @include box-sizing(border-box);\r\n        text-align: center;\r\n      }\r\n      &:hover{\r\n        text-decoration: none;\r\n      }\r\n    }\r\n  }\r\n}",".hor-banner{\r\n  display: block;\r\n  position: relative;\r\n  float: left;\r\n  width: 100%;\r\n  background-color: #f0fcff;\r\n  &__box{\r\n    @include display-flex(flex);\r\n    @include flex-wrap(wrap);\r\n    @include flex-direction(row);\r\n    @include justify-content(space-between);\r\n    position: relative;\r\n    float: left;\r\n    width: 100%;\r\n\r\n  }\r\n}"],"sourceRoot":"css-source"}